# -*- coding: utf-8 -*-
"""Untitled14.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cHRay8bTZllIfr4kuIvNGUewr09_rlZd
"""

import cv2 
import numpy as np 
import matplotlib.pyplot as plt
import math




img = cv2.imread('img.jpg',1)
plt.imshow(img)



rmin = np.amin(img)
rmax = np.amax(img)
rmin,rmax




#Constrast Stretching
# l is less than 1
# m is greater than 1
# n is less than 1
img = cv2.imread('img.jpg',cv2.IMREAD_GRAYSCALE)
l,m,n = 0.1,2,0.5
a,b = 100,150
v = l*a
w = m*(b-a)/v
for i in range(len(img)):
    for j in range(len(img[0])):
        if(img[i][j] > 0 and img[i][j] <= a):
            img[i][j] = l*img[i][j]
        elif(img[i][j] > a and img[i][j] <= b):
            img[i][j] = m*(img[i][j]-a)+v
        else :
                img[i][j] = n*(img[i][j]-b)+w
plt.imshow(img,cmap="gray")






rmin = np.amin(img)
rmax = np.amax(img)
rmin,rmax








#Constrast Stretching Slope changed
# l is greater than 1
# m is less than 1
# n is greater than 1
img = cv2.imread('img.jpg',cv2.IMREAD_GRAYSCALE)
l,m,n = 1.5,0.2,2.5
a,b = 100,150
v = l*a
w = m*(b-a)/v
for i in range(len(img)):
    for j in range(len(img[0])):
        if(img[i][j] > 0 and img[i][j] <= a):
            img[i][j] = l*img[i][j]
        elif(img[i][j] > a and img[i][j] <= b):
            img[i][j] = m*(img[i][j]-a)+v
        else :
            img[i][j] = n*(img[i][j]-b)+w
plt.imshow(img,cmap="gray")






rmin = np.amin(img)
rmax = np.amax(img)
rmin,rmax





#Log Transformation
c = 35
img = cv2.imread('img.jpg',cv2.IMREAD_GRAYSCALE)
for i in range(len(img)):
    for j in range(len(img[0])):
        img[i][j] = c*math.log((img[i][j]+1))
plt.imshow(img,cmap="gray")





rmin = np.amin(img)
rmax = np.amax(img)
rmin,rmax





#Power Law Transformation
img = cv2.imread('img.jpg',cv2.IMREAD_GRAYSCALE)
gamma = 1
for i in range(len(img)):
    for j in range(len(img[0])):
        img[i][j] = img[i][j]**gamma
plt.imshow(img,cmap="gray")






rmin = np.amin(img)
rmax = np.amax(img)
rmin,rmax





img = cv2.imread('img.jpg',cv2.IMREAD_GRAYSCALE)
gamma = 0.4
for i in range(len(img)):
    for j in range(len(img[0])):
        img[i][j] = img[i][j]**gamma
plt.imshow(img,cmap="gray")




rmin = np.amin(img)
rmax = np.amax(img)
rmin,rmax