# -*- coding: utf-8 -*-
"""Untitled14.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cHRay8bTZllIfr4kuIvNGUewr09_rlZd
"""

import cv2
import numpy as np
import matplotlib.pyplot as plt
from google.colab.patches import cv2_imshow
img = cv2.imread('/content/img.jpg')
img = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
cv2_imshow(img)
print("The shape of image is: ",img.shape)
print("Max and min of image: ",img.max(),img.min())




freq={}
for i in range(256):
  freq[i]=0
row,col=img.shape
for i in range(row):
  for j in range(col):
    freq[img[i][j]]+=1
import pandas as pd
df=pd.DataFrame(freq.values(),columns=['nk'])
df['nk'].value_counts()





df['pdf']=[0]*256
df['cdf']=[0]*256
df['(L-1)*cdf']=[0]*256
df['roundoff']=[0]*256
df.head()






total_sum=sum(df['nk'])
total_sum





df['pdf']=df['nk']/total_sum
df['pdf'].value_counts()






cdf=[]
cdf.append(df['pdf'][0])
for i in range(1,256):
  cdf.append(cdf[-1]+df['pdf'][i])
df['cdf']=cdf
df['cdf'].value_counts()







L=256
df['(L-1)*cdf']=(L-1)*df['cdf']
df['(L-1)*cdf'].value_counts()







df['roundoff']=round(df['(L-1)*cdf'])
df['roundoff'].value_counts()




df






output_img=img.copy()
for i in range(row):
  for j in range(col):
    ori=img[i][j]
    temp=df.iloc[ori]
    new_pixel=temp['roundoff']
    output_img[i][j]=new_pixel
cv2_imshow(img)
print("The Histogram Equalization Image")
cv2_imshow(output_img)
print("Max and min of image: ",output_img.max(),output_img.min())









input_freq={}
for i in range(256):
  input_freq[i]=0
print(input_freq)

for i in range(img.shape[0]):
  for j in range(img.shape[1]):
    input_freq[img[i][j]]+=1

output_freq={}
for i in range(256):
  output_freq[i]=0
print(output_freq)

for i in range(output_img.shape[0]):
  for j in range(output_img.shape[1]):
    output_freq[output_img[i][j]]+=1









plt.bar(output_freq.keys(), output_freq.values(), color="red")
plt.bar(input_freq.keys(), input_freq.values(), color="blue")
plt.legend(['Output Frequency','Input Frequency'])
plt.xlabel("n")
plt.ylabel("Frequency")
plt.title("Output Frequency")
plt.show()