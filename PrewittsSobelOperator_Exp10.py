# -*- coding: utf-8 -*-
"""Untitled14.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cHRay8bTZllIfr4kuIvNGUewr09_rlZd
"""

import cv2
import random
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt



img = cv2.imread('/content/img.jpg',0) 
plt.imshow(img,cmap='gray')




img_gaussian = cv2.GaussianBlur(img,(3,3),0)
print("Gaussian Blurred Image: ")
plt.imshow(img_gaussian,cmap='gray')





#Prewitts Operator
kernelx = np.array([[1,1,1],[0,0,0],[-1,-1,-1]])
kernely = np.array([[-1,0,1],[-1,0,1],[-1,0,1]])
img_prewittx = cv2.filter2D(img_gaussian, -1, kernelx)
img_prewitty = cv2.filter2D(img_gaussian, -1, kernely)




print("Prewitt X: ")
plt.imshow(img_prewittx,cmap='gray')






print("Prewitt Y: ")
plt.imshow(img_prewitty,cmap='gray')






print("Prewitt (X+Y): ")
plt.imshow(img_prewittx + img_prewitty,cmap='gray')





plt.imshow(cv2.filter2D(img_gaussian, -1, (kernelx + kernely)),cmap='gray')




#Sobel Operator
skernelx = np.array([[-1,-2,-1],[0,0,0],[1,2,1]])
skernely = np.array([[-1,0,1],[-2,0,2],[-1,0,1]])
img_sobelx = cv2.filter2D(img_gaussian, -1, skernelx)
img_sobely = cv2.filter2D(img_gaussian, -1, skernely) 




print("Sobel X: ")
plt.imshow(img_sobelx,cmap='gray')






print("Sobel Y: ")
plt.imshow(img_sobely,cmap='gray')






print("Sobel (X+Y): ")
plt.imshow(img_sobelx + img_sobely,cmap='gray')





plt.imshow(cv2.filter2D(img_gaussian, -1, (skernelx + skernely)),cmap='gray')





#RESULT:
#1) Perwitt filter increase the edge intensity and it become enhanced comparatively to the original image.

#2) Sobel filter it finds the direction of the largest increase from light to dark and the rate of change in that direction.

#3) It is observed that adding the image with horizontal mask & vertical mask will give the same result as adding the x-gradient & y-gradient images.